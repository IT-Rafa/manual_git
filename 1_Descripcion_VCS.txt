DESCRIPCIÓN DE GIT

Git es un sistema para el control de versiones (En inglés: Version Control System o VCS) distribuido, gratuito y de código abierto y creado por Linus Torvalds en 2005

Git nos permite convertir una carpeta normal con un proyecto, al que también le podemos llamar repositorio, a un repositorio git, con mejoras para la gestión de versiones.

Normalmente, una carpeta, o repositorio normal, solo almacena una versión del proyecto y solo existe el último estado.

Sin embargo, en un repositorio git podemos tener varias versiones del proyecto.
Cada versión será asignada a una rama (branch), que tendrá un nombre asignado.

Además, en cada rama, existirán distintos registros de los archivos incluidos en el proyecto según este avanza. Estos registros son llamados commits.
Cada commit estará definido por un usuario e incluirá, tanto el usuario que lo creó, con su email, como una descripción en texto y un identificador propio y único.


Este sistema está pensado para almacenar cualquier tipo de datos que vayan evolucionando. Podemos almacenar datos de libros, los archivos de los diseños, etc.

En nuestro caso nos centraremos en los proyectos de software.
Los archivos internos serán normalmente de los siguientes tipos:
	- Archivos de código
	- Configuración.
	- Recursos varios
	- Documentación
	- Licencias
	- Estilos
	- etc.

--------------



Este carpeta la podemos crear manualmente, creando la carpeta y sus archivos, o usando programas.
Las herramientas del propio IDE´S o incluso en algunos lenguajes, nos permiten  crear una carpeta, basándose en una plantilla, que crea los recursos necesarios para que el programa funcione.


Con esto tendremos una evolución lineal cronológica, sin posibilidad de volver atrás. Nos permite que el programa evolucione, pero no tenemos opción de ver las versiones antiguas del proyecto, ni hacer versiones alternativas en la misma carpeta.

Es decir, el proyecto podrá avanzar, pero solo tendremos una única versión con solo su último estado.


REPOSITORIO CON VCS

La idea de usar VCS es añadirle al repositorio tradicional opciones para ver las versiones antiguas e incluso hacer versiones independientes en esa misma carpeta.
Cada VCS tiene sus opciones propias y su sistema de gestión, pero todos nos darán herramientas para poder gestionar las versiones.

Normalmente sus mejoras, además de las que el repositorio normal nos ofrece, son:
	- El historial:
		Donde podemos elegir y ver las versiones antiguas, que se habrán hecho en su momento.
	- Ramas o versiones alternativas.
		Normalmente en la misma carpeta. Estas versiones estarán relacionadas unas con otras, pero serán independientes, salvo que queramos unirlas.
	- Acceso a otros repositorios: 
		Podemos incluir acceso a otros repositorios, en otros equipos y juntar sus versiones con las nuestras, tanto para usuarios con distintos equipos como grupos de usuarios. 
	- Seguridad:
		Incluye opciones de seguridad para decidir que usuarios pueden cambiar algo o solo enviar código alternativo pendiente de comprobar y cada cambio irá firmado por el correo del usuario.

En nuestro caso, usaremos git para gestionar proyectos de software, pero vale para cualquier proyecto donde sea importante acceder a una versión antigua, o tener versiones alternativas.
